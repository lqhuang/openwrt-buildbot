name: openwrt image ci

on:
  repository_dispatch:
  workflow_dispatch:

env:
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  TZ: Asia/Shanghai
  OPENWRT_SRC_PATH: openwrt

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build OpenWrt ${{ matrix.version }} Firmware ${{ matrix.target }}
    strategy:
      fail-fast: true
      matrix:
        version: ["23.05"]
        target: ["x86_64"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Space cleanup and initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          make pre-setup
          sudo -E timedatectl set-timezone "$TZ"

      - name: Obtaining the Image Builder
        run: |
          make setup-image-builder OPENWRT_VERSION=${{ matrix.version }}

      - name: Get current date
        id: date
        run: |
          echo "date=$(date +'%m/%d_%Y_%H/%M')" >> $GITHUB_ENV
          echo "date2=$(date +'%Y/%m %d')" >> $GITHUB_ENV
          echo "date3=$(date +'%m.%d')" >> $GITHUB_ENV
          echo "DOCKERTAG=${{ secrets.DOCKER_ID }}/openwrt-6p:latest" >> $GITHUB_ENV
          VERSION="$(echo "${{github.event.action}}" | grep -Eo " [0-9.]+" | sed -e 's/ //')" || true
          [ "$VERSION" ] && echo "VERSION=$VERSION" >> $GITHUB_ENV || echo "VERSION=$(date +'%m.%d')" >> $GITHUB_ENV


      - name: Update feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: make defconfig

      - name: Download packages
        working-directory: ./openwrt
        run: make download -j$(nproc)

      - name: Cache
        uses: klever1988/cachewrtbuild@main
        with:
          ccache: "true"
          prefix: ${{ github.workspace }}/openwrt

      - name: Compile the firmware
        working-directory: ./openwrt
        run: |
          echo -e "Use $(nproc) threads to compile ..."
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifacts
        run: |
          mkdir -p ./artifact/buildinfo
          mkdir -p ./artifact/targets
          cp -rf $(find ./openwrt/bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
          cp -rf $(find ./openwrt/bin/targets/ -type f ! -name "*.buildinfo" ! -name "*.manifest") ./artifact/targets/

      # - name: Organize files
      #   id: organize
      #   if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      #   run: |
      #     mkdir firmware
      #     mv -f openwrt/bin/targets/*/*/{*combined*,*sysupgrade*} ./firmware/ 2>/dev/null || true
      #     cp openwrt/.config  ./firmware/${{matrix.target}}.config
      #     cp openwrt/build_dir/target-*/linux-*/linux-*/.config ./firmware/${{matrix.target}}_kernel.config
      #     cd firmware
      #     echo "v${{ env.date2 }}" > version.txt
      #     md5=$((md5sum *squashfs-sysupgrade* || md5sum *squashfs-combined-efi*) | awk '{print $1}') 2>/dev/null
      #     echo $md5 >> version.txt
      #     rename -v "s/^immortalwrt/${{ env.VERSION }}-openwrt/" * || true
      #     rename -v "s/friendlyarm_//" *gz
      #     echo $md5 >> version.txt
      #     echo ${{matrix.target}} >> version.txt
      #     rm -rf sha256sums
      #     echo "FIRMWARE=$PWD" >> $GITHUB_ENV

      - name: Upload buildinfo
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload firmware
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_firmware
          path: ./artifact/targets/
